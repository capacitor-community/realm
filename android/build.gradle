ext {
    junitVersion =  project.hasProperty('junitVersion') ? rootProject.ext.junitVersion : '4.12'
    androidxJunitVersion =  project.hasProperty('androidxJunitVersion') ? rootProject.ext.androidxJunitVersion : '1.1.1'
    androidxEspressoCoreVersion =  project.hasProperty('androidxEspressoCoreVersion') ? rootProject.ext.androidxEspressoCoreVersion : '3.2.0'
}

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.1'
        classpath "io.realm:realm-gradle-plugin:10.0.0-BETA.5"
    }
}

apply plugin: 'com.android.library'

apply plugin: 'realm-android'


android {
    compileSdkVersion project.hasProperty('compileSdkVersion') ? rootProject.ext.compileSdkVersion : 29
    defaultConfig {
        minSdkVersion project.hasProperty('minSdkVersion') ? rootProject.ext.minSdkVersion : 21
        targetSdkVersion project.hasProperty('targetSdkVersion') ? rootProject.ext.targetSdkVersion : 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn forwardDebugPort
    }
}

realm {
    syncEnabled = true
}

repositories {
    google()
    jcenter()
    mavenCentral()
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation 'com.squareup.okhttp:okhttp:2.7.5'
    implementation 'org.nanohttpd:nanohttpd:2.2.0'
    implementation 'com.facebook.soloader:soloader:0.9.0+'
}

tasks.register('forwardDebugPort', Exec) {
    def adb = android.getAdbExe()?.toString() ?: 'false'
    commandLine adb, 'forward', 'tcp:8083', 'tcp:8083'
    ignoreExitValue true
    doLast {
        if (execResult.getExitValue() != 0) {
            logger.error(
                    '===========================================================================\n' +
                            'WARNING: Failed to automatically forward port 8083.\n' +
                            'In order to use Realm in Chrome debugging mode, port 8083 must be forwarded\n' +
                            'from localhost to the device or emulator being used to run the application.\n' +
                            'You may need to add the appropriate flags to the command that failed:\n' +
                            '    adb forward tcp:8083 tcp:8083\n' +
                            '===========================================================================\n'
            )
        }
    }
}